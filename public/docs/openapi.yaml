openapi: 3.0.3
info:
  title: Laravel
  description: ""
  version: 1.0.0
servers:
  - url: "http://nt-cms-backend.test"
paths:
  /api/v1/register:
    post:
      summary: "Create a new user"
      operationId: createANewUser
      description: ""
      parameters: []
      responses: {}
      tags:
        - Authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Must not be greater than 255 characters."
                  example: ntdvxidaompzawprtty
                  nullable: false
                email:
                  type: string
                  description: "Must be a valid email address. Must not be greater than 255 characters."
                  example: krajcik.quinn@example.org
                  nullable: false
                password:
                  type: string
                  description: "Must not be greater than 20 characters."
                  example: "9tfIAdiLhAU:"
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/v1/auth/login:
    post:
      summary: "Sign in a user"
      operationId: signInAUser
      description: "Get a JWT via given credentials."
      parameters: []
      responses: {}
      tags:
        - Authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the App\Models\User table.'
                  example: jakayla71@example.org
                  nullable: false
                password:
                  type: string
                  description: ""
                  example: perspiciatis
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/v1/auth/refresh:
    post:
      summary: "Refresh Token"
      operationId: refreshToken
      description: "Get a new JWT Token via given refresh token and old access token."
      parameters: []
      responses: {}
      tags:
        - Authenticate
  /api/v1/auth/logout:
    delete:
      summary: "Sign out a user"
      operationId: signOutAUser
      description: "This endpoint lets you logout and destroy a token."
      parameters: []
      responses: {}
      tags:
        - Authenticate
  /api/v1/auth/me:
    get:
      summary: "Get a user"
      operationId: getAUser
      description: "This endpoint lets you get a user."
      parameters: []
      responses:
        401:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                  code: 401
                  message: "Wrong number of segments"
                properties:
                  error:
                    type: string
                    example: Unauthorized
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Wrong number of segments"
      tags:
        - Authenticate
  /api/v1/blocks:
    get:
      summary: "Display a listing of the resource."
      operationId: displayAListingOfTheResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: "http://nt-cms-backend.test/api/v1/blocks?page=1"
                    last: "http://nt-cms-backend.test/api/v1/blocks?page=1"
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      - url: null
                        label: "&laquo; Previous"
                        active: false
                      - url: "http://nt-cms-backend.test/api/v1/blocks?page=1"
                        label: "1"
                        active: true
                      - url: null
                        label: "Next &raquo;"
                        active: false
                    path: "http://nt-cms-backend.test/api/v1/blocks"
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/blocks?page=1"
                      last:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/blocks?page=1"
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          - url: null
                            label: "&laquo; Previous"
                            active: false
                          - url: "http://nt-cms-backend.test/api/v1/blocks?page=1"
                            label: "1"
                            active: true
                          - url: null
                            label: "Next &raquo;"
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: "&laquo; Previous"
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/blocks"
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Blocks
    post:
      summary: "Store a newly created resource in storage."
      operationId: storeANewlyCreatedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Blocks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: ""
                  example: sed
                  nullable: false
                media:
                  type: string
                  description: ""
                  example: ut
                  nullable: false
                content:
                  type: string
                  description: ""
                  example: quod
                  nullable: false
                category:
                  type: string
                  description: ""
                  example: ut
                  nullable: false
              required:
                - label
                - media
                - content
                - category
  "/api/v1/blocks/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        404:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Block] 5'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Block] 5'
      tags:
        - Blocks
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Blocks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: ""
                  example: omnis
                  nullable: false
                media:
                  type: string
                  description: ""
                  example: adipisci
                  nullable: false
                content:
                  type: string
                  description: ""
                  example: at
                  nullable: false
                category:
                  type: string
                  description: ""
                  example: aspernatur
                  nullable: false
              required:
                - label
                - media
                - content
                - category
    delete:
      summary: ""
      operationId: deleteApiV1BlocksId
      description: ""
      parameters: []
      responses: {}
      tags:
        - Blocks
    parameters:
      - in: path
        name: id
        description: "The ID of the block."
        example: 5
        required: true
        schema:
          type: integer
  /api/v1/user-has-organizations:
    get:
      summary: "Display a listing of the resource."
      operationId: displayAListingOfTheResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: "http://nt-cms-backend.test/api/v1/user-has-organizations?page=1"
                    last: "http://nt-cms-backend.test/api/v1/user-has-organizations?page=1"
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      - url: null
                        label: "&laquo; Previous"
                        active: false
                      - url: "http://nt-cms-backend.test/api/v1/user-has-organizations?page=1"
                        label: "1"
                        active: true
                      - url: null
                        label: "Next &raquo;"
                        active: false
                    path: "http://nt-cms-backend.test/api/v1/user-has-organizations"
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/user-has-organizations?page=1"
                      last:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/user-has-organizations?page=1"
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          - url: null
                            label: "&laquo; Previous"
                            active: false
                          - url: "http://nt-cms-backend.test/api/v1/user-has-organizations?page=1"
                            label: "1"
                            active: true
                          - url: null
                            label: "Next &raquo;"
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: "&laquo; Previous"
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/user-has-organizations"
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
    post:
      summary: "Store a newly created resource in storage."
      operationId: storeANewlyCreatedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ""
                  example: nesciunt
                  nullable: false
                organization_id:
                  type: string
                  description: ""
                  example: ipsa
                  nullable: false
              required:
                - user_id
                - organization_id
  "/api/v1/user-has-organizations/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        400:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  error: "Bad Request"
                  code: 400
                  message: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'id' in 'where clause' (Connection: mysql, SQL: select * from `user_has_organizations` where `id` = 1 limit 1)"
                properties:
                  error:
                    type: string
                    example: "Bad Request"
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'id' in 'where clause' (Connection: mysql, SQL: select * from `user_has_organizations` where `id` = 1 limit 1)"
      tags:
        - Endpoints
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ""
                  example: et
                  nullable: false
                organization_id:
                  type: string
                  description: ""
                  example: maxime
                  nullable: false
              required:
                - user_id
                - organization_id
    delete:
      summary: ""
      operationId: deleteApiV1UserHasOrganizationsId
      description: ""
      parameters: []
      responses: {}
      tags:
        - Endpoints
    parameters:
      - in: path
        name: id
        description: "The ID of the user has organization."
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/rganizations:
    get:
      summary: "Display a listing of the resource."
      operationId: displayAListingOfTheResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: "http://nt-cms-backend.test/api/v1/rganizations?page=1"
                    last: "http://nt-cms-backend.test/api/v1/rganizations?page=1"
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      - url: null
                        label: "&laquo; Previous"
                        active: false
                      - url: "http://nt-cms-backend.test/api/v1/rganizations?page=1"
                        label: "1"
                        active: true
                      - url: null
                        label: "Next &raquo;"
                        active: false
                    path: "http://nt-cms-backend.test/api/v1/rganizations"
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/rganizations?page=1"
                      last:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/rganizations?page=1"
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          - url: null
                            label: "&laquo; Previous"
                            active: false
                          - url: "http://nt-cms-backend.test/api/v1/rganizations?page=1"
                            label: "1"
                            active: true
                          - url: null
                            label: "Next &raquo;"
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: "&laquo; Previous"
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/rganizations"
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Organizations
    post:
      summary: "Store a newly created resource in storage."
      operationId: storeANewlyCreatedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ""
                  example: eum
                  nullable: false
                description:
                  type: string
                  description: ""
                  example: "Sequi modi perferendis voluptatem error."
                  nullable: false
              required:
                - name
  "/api/v1/rganizations/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Organizations
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ""
                  example: asperiores
                  nullable: false
                description:
                  type: string
                  description: ""
                  example: "Qui aut labore corrupti sunt fuga dicta."
                  nullable: false
              required:
                - name
    delete:
      summary: ""
      operationId: deleteApiV1RganizationsId
      description: ""
      parameters: []
      responses: {}
      tags:
        - Organizations
    parameters:
      - in: path
        name: id
        description: "The ID of the rganization."
        example: 17
        required: true
        schema:
          type: integer
  /api/v1/postmeta:
    get:
      summary: "Display a listing of the resource."
      operationId: displayAListingOfTheResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: "http://nt-cms-backend.test/api/v1/postmeta?page=1"
                    last: "http://nt-cms-backend.test/api/v1/postmeta?page=1"
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      - url: null
                        label: "&laquo; Previous"
                        active: false
                      - url: "http://nt-cms-backend.test/api/v1/postmeta?page=1"
                        label: "1"
                        active: true
                      - url: null
                        label: "Next &raquo;"
                        active: false
                    path: "http://nt-cms-backend.test/api/v1/postmeta"
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/postmeta?page=1"
                      last:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/postmeta?page=1"
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          - url: null
                            label: "&laquo; Previous"
                            active: false
                          - url: "http://nt-cms-backend.test/api/v1/postmeta?page=1"
                            label: "1"
                            active: true
                          - url: null
                            label: "Next &raquo;"
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: "&laquo; Previous"
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/postmeta"
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - "Post Metadata"
    post:
      summary: "Store a newly created resource in storage."
      operationId: storeANewlyCreatedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - "Post Metadata"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: string
                  description: ""
                  example: odit
                  nullable: false
                meta_key:
                  type: string
                  description: ""
                  example: aut
                  nullable: false
                meta_value:
                  type: string
                  description: ""
                  example: id
                  nullable: false
              required:
                - post_id
                - meta_key
                - meta_value
  "/api/v1/postmeta/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - "Post Metadata"
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - "Post Metadata"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: string
                  description: ""
                  example: quidem
                  nullable: false
                meta_key:
                  type: string
                  description: ""
                  example: iure
                  nullable: false
                meta_value:
                  type: string
                  description: ""
                  example: numquam
                  nullable: false
              required:
                - post_id
                - meta_key
                - meta_value
    delete:
      summary: ""
      operationId: deleteApiV1PostMetaId
      description: ""
      parameters: []
      responses: {}
      tags:
        - "Post Metadata"
    parameters:
      - in: path
        name: id
        description: "The ID of the postmeta."
        example: 8
        required: true
        schema:
          type: integer
  /api/v1/posts:
    get:
      summary: "Get all posts"
      operationId: getAllPosts
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: "John Doe"
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "John Doe"
      tags:
        - Posts
    post:
      summary: "Add a new Post"
      operationId: addANewPost
      description: ""
      parameters: []
      responses: {}
      tags:
        - Posts
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ""
                  example: ut
                  nullable: false
                type:
                  type: string
                  description: ""
                  example: blanditiis
                  nullable: false
                slug:
                  type: string
                  description: ""
                  example: hic
                  nullable: false
                title:
                  type: string
                  description: "This field is required when <code>type</code> is <code>!attachment</code>."
                  example: accusantium
                  nullable: false
                excerpt:
                  type: string
                  description: ""
                  example: dolores
                  nullable: false
                content:
                  type: string
                  description: "This field is required when <code>type</code> is <code>!attachment</code>."
                  example: et
                  nullable: false
                data_json:
                  type: string
                  description: ""
                  example: autem
                  nullable: false
                language:
                  type: string
                  description: ""
                  example: officiis
                  nullable: false
                status:
                  type: string
                  description: ""
                  example: ullam
                  nullable: false
                guid:
                  type: string
                  description: ""
                  example: impedit
                  nullable: false
                menu_order:
                  type: string
                  description: ""
                  example: reprehenderit
                  nullable: false
                ordered:
                  type: string
                  description: ""
                  example: doloribus
                  nullable: false
                mime_type:
                  type: string
                  description: ""
                  example: iste
                  nullable: false
                files:
                  type: array
                  description: "This field is required when <code>type</code> is <code>attachment</code>.  Must be a file. Must not be greater than 10240 kilobytes."
                  items:
                    type: string
                    format: binary
              required:
                - user_id
                - type
                - data_json
                - language
                - status
                - menu_order
                - ordered
  "/api/v1/posts/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  user_id: 2
                  organization_id: null
                  type: page
                  parent_id: null
                  slug: null
                  title: "test data"
                  excerpt: null
                  data_json: '{"assets":[],"styles":[{"selectors":["#il82"],"style":{"display":"inline-block","padding":"5px","min-width":"50px","min-height":"50px"}}],"pages":[{"frames":[{"component":{"type":"wrapper","stylable":["background","background-color","background-image","background-repeat","background-attachment","background-position","background-size"],"components":[{"type":"link","droppable":true,"editable":false,"attributes":{"id":"il82"}},{"tagName":"blockquote","type":"text","classes":["quote"],"components":[{"type":"textnode","content":"\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      "}]},{"tagName":"blockquote","type":"text","classes":["quote"],"components":[{"type":"textnode","content":"\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      "}]}],"head":{"type":"head"},"docEl":{"tagName":"html"}},"id":"8LIe552R5lZcErpn"}],"id":"8XyEee03XvFVtrLg","type":"main"}],"symbols":[],"dataSources":[]}'
                  content: "<body><a id=\"il82\"></a><blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      </blockquote><blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      </blockquote></body>"
                  custom_css: "* { box-sizing: border-box; } body {margin: 0;}#il82{display:inline-block;padding:5px;min-width:50px;min-height:50px;}"
                  custom_js: null
                  language: th
                  status: draft
                  password: null
                  guid: /test-data
                  menu_order: 0
                  ordered: 0
                  mime_type: null
                  published_at: null
                  published_by: null
                  created_at: "2024-11-05T04:56:32.000000Z"
                  created_by: null
                  updated_at: "2024-11-14T05:42:01.000000Z"
                  updated_by: null
                  deleted_at: null
                  deleted_by: null
                properties:
                  id:
                    type: integer
                    example: 1
                  user_id:
                    type: integer
                    example: 2
                  organization_id:
                    type: string
                    example: null
                  type:
                    type: string
                    example: page
                  parent_id:
                    type: string
                    example: null
                  slug:
                    type: string
                    example: null
                  title:
                    type: string
                    example: "test data"
                  excerpt:
                    type: string
                    example: null
                  data_json:
                    type: string
                    example: '{"assets":[],"styles":[{"selectors":["#il82"],"style":{"display":"inline-block","padding":"5px","min-width":"50px","min-height":"50px"}}],"pages":[{"frames":[{"component":{"type":"wrapper","stylable":["background","background-color","background-image","background-repeat","background-attachment","background-position","background-size"],"components":[{"type":"link","droppable":true,"editable":false,"attributes":{"id":"il82"}},{"tagName":"blockquote","type":"text","classes":["quote"],"components":[{"type":"textnode","content":"\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      "}]},{"tagName":"blockquote","type":"text","classes":["quote"],"components":[{"type":"textnode","content":"\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      "}]}],"head":{"type":"head"},"docEl":{"tagName":"html"}},"id":"8LIe552R5lZcErpn"}],"id":"8XyEee03XvFVtrLg","type":"main"}],"symbols":[],"dataSources":[]}'
                  content:
                    type: string
                    example: "<body><a id=\"il82\"></a><blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      </blockquote><blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      </blockquote></body>"
                  custom_css:
                    type: string
                    example: "* { box-sizing: border-box; } body {margin: 0;}#il82{display:inline-block;padding:5px;min-width:50px;min-height:50px;}"
                  custom_js:
                    type: string
                    example: null
                  language:
                    type: string
                    example: th
                  status:
                    type: string
                    example: draft
                  password:
                    type: string
                    example: null
                  guid:
                    type: string
                    example: /test-data
                  menu_order:
                    type: integer
                    example: 0
                  ordered:
                    type: integer
                    example: 0
                  mime_type:
                    type: string
                    example: null
                  published_at:
                    type: string
                    example: null
                  published_by:
                    type: string
                    example: null
                  created_at:
                    type: string
                    example: "2024-11-05T04:56:32.000000Z"
                  created_by:
                    type: string
                    example: null
                  updated_at:
                    type: string
                    example: "2024-11-14T05:42:01.000000Z"
                  updated_by:
                    type: string
                    example: null
                  deleted_at:
                    type: string
                    example: null
                  deleted_by:
                    type: string
                    example: null
      tags:
        - Posts
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Posts
    delete:
      summary: ""
      operationId: deleteApiV1PostsId
      description: ""
      parameters: []
      responses: {}
      tags:
        - Posts
    parameters:
      - in: path
        name: id
        description: "The ID of the post."
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/templates:
    get:
      summary: "Display a listing of the resource."
      operationId: displayAListingOfTheResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: "http://nt-cms-backend.test/api/v1/templates?page=1"
                    last: "http://nt-cms-backend.test/api/v1/templates?page=1"
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      - url: null
                        label: "&laquo; Previous"
                        active: false
                      - url: "http://nt-cms-backend.test/api/v1/templates?page=1"
                        label: "1"
                        active: true
                      - url: null
                        label: "Next &raquo;"
                        active: false
                    path: "http://nt-cms-backend.test/api/v1/templates"
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/templates?page=1"
                      last:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/templates?page=1"
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          - url: null
                            label: "&laquo; Previous"
                            active: false
                          - url: "http://nt-cms-backend.test/api/v1/templates?page=1"
                            label: "1"
                            active: true
                          - url: null
                            label: "Next &raquo;"
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: "&laquo; Previous"
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: "http://nt-cms-backend.test/api/v1/templates"
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Templates
    post:
      summary: "Store a newly created resource in storage."
      operationId: storeANewlyCreatedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ""
                  example: sunt
                  nullable: false
                thumbnail:
                  type: string
                  description: ""
                  example: in
                  nullable: false
                data:
                  type: string
                  description: ""
                  example: necessitatibus
                  nullable: false
              required:
                - name
                - thumbnail
                - data
  "/api/v1/templates/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        404:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Template] 20'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Template] 20'
      tags:
        - Templates
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ""
                  example: incidunt
                  nullable: false
                thumbnail:
                  type: string
                  description: ""
                  example: sunt
                  nullable: false
                data:
                  type: string
                  description: ""
                  example: fuga
                  nullable: false
              required:
                - name
                - thumbnail
                - data
    delete:
      summary: ""
      operationId: deleteApiV1TemplatesId
      description: ""
      parameters: []
      responses: {}
      tags:
        - Templates
    parameters:
      - in: path
        name: id
        description: "The ID of the template."
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/usermeta:
    get:
      summary: "Display a listing of the resource."
      operationId: displayAListingOfTheResource
      description: ""
      parameters: []
      responses:
        400:
          description: ""
          content:
            application/json:
              schema:
                type: object
                example:
                  error: "Bad Request"
                  code: 400
                  message: "SQLSTATE[42S02]: Base table or view not found: 1146 Table 'nt_cms_backend.user_meta' doesn't exist (Connection: mysql, SQL: select count(*) as aggregate from `user_meta`)"
                properties:
                  error:
                    type: string
                    example: "Bad Request"
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "SQLSTATE[42S02]: Base table or view not found: 1146 Table 'nt_cms_backend.user_meta' doesn't exist (Connection: mysql, SQL: select count(*) as aggregate from `user_meta`)"
      tags:
        - "User meta data"
    post:
      summary: "Store a newly created resource in storage."
      operationId: storeANewlyCreatedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - "User meta data"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ""
                  example: hic
                  nullable: false
                meta_key:
                  type: string
                  description: ""
                  example: sit
                  nullable: false
                meta_value:
                  type: string
                  description: ""
                  example: consectetur
                  nullable: false
              required:
                - user_id
                - meta_key
                - meta_value
  "/api/v1/usermeta/{id}":
    get:
      summary: "Display the specified resource."
      operationId: displayTheSpecifiedResource
      description: ""
      parameters: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - "User meta data"
    put:
      summary: "Update the specified resource in storage."
      operationId: updateTheSpecifiedResourceInStorage
      description: ""
      parameters: []
      responses: {}
      tags:
        - "User meta data"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ""
                  example: porro
                  nullable: false
                meta_key:
                  type: string
                  description: ""
                  example: consequatur
                  nullable: false
                meta_value:
                  type: string
                  description: ""
                  example: et
                  nullable: false
              required:
                - user_id
                - meta_key
                - meta_value
    delete:
      summary: ""
      operationId: deleteApiV1UserMetaId
      description: ""
      parameters: []
      responses: {}
      tags:
        - "User meta data"
    parameters:
      - in: path
        name: id
        description: "The ID of the usermeta."
        example: 19
        required: true
        schema:
          type: integer
tags:
  - name: Authenticate
    description: "\nAPIs for Authenticate"
  - name: Blocks
    description: "\nAPIs for Blocks"
  - name: Endpoints
    description: ""
  - name: Organizations
    description: "\nAPIs for Organization"
  - name: "Post Metadata"
    description: "\nAPIs for Post Metadata"
  - name: Posts
    description: "\nAPIs for Posts"
  - name: Templates
    description: "\nAPIs for Templates"
  - name: "User meta data"
    description: "\nAPIs for User meta data"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: "You can retrieve your token by visiting Login endpoint and retrive <b>Access token</b>."
security:
  - default: []
