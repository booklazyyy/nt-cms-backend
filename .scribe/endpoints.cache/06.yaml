## Autogenerated by Scribe. DO NOT MODIFY.

name: "User meta data"
description: |-

  APIs for User meta data
endpoints:
  - httpMethods:
      - GET
    uri: api/v1/usermeta
    metadata:
      groupName: "User meta data"
      groupDescription: |-

        APIs for User meta data
      subgroup: ""
      subgroupDescription: ""
      title: "Display a listing of the resource."
      description: ""
      authenticated: true
      custom: []
    headers:
      Authorization: "Bearer {YOUR_AUTH_KEY}"
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 400
        content: '{"error":"Bad Request","code":400,"message":"SQLSTATE[42S02]: Base table or view not found: 1146 Table ''nt_cms_backend.user_meta'' doesn''t exist (Connection: mysql, SQL: select count(*) as aggregate from `user_meta`)"}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - "Bearer ef3Z6dV51ag4bPv8Dachk6E"
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: api/v1/usermeta
    metadata:
      groupName: "User meta data"
      groupDescription: |-

        APIs for User meta data
      subgroup: ""
      subgroupDescription: ""
      title: "Store a newly created resource in storage."
      description: ""
      authenticated: true
      custom: []
    headers:
      Authorization: "Bearer {YOUR_AUTH_KEY}"
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ""
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_key:
        name: meta_key
        description: ""
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_value:
        name: meta_value
        description: ""
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: hic
      meta_key: sit
      meta_value: consectetur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - "Bearer 8vg6kdPfeb4Da1E3cZV65ha"
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: "api/v1/usermeta/{id}"
    metadata:
      groupName: "User meta data"
      groupDescription: |-

        APIs for User meta data
      subgroup: ""
      subgroupDescription: ""
      title: "Display the specified resource."
      description: ""
      authenticated: true
      custom: []
    headers:
      Authorization: "Bearer {YOUR_AUTH_KEY}"
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the usermeta."
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 200
        content: "[]"
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - "Bearer 613ecaV5f6h4ZPDa8kdvgEb"
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - PUT
      - PATCH
    uri: "api/v1/usermeta/{id}"
    metadata:
      groupName: "User meta data"
      groupDescription: |-

        APIs for User meta data
      subgroup: ""
      subgroupDescription: ""
      title: "Update the specified resource in storage."
      description: ""
      authenticated: true
      custom: []
    headers:
      Authorization: "Bearer {YOUR_AUTH_KEY}"
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the usermeta."
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ""
        required: true
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_key:
        name: meta_key
        description: ""
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_value:
        name: meta_value
        description: ""
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: porro
      meta_key: consequatur
      meta_value: et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - "Bearer gfv6bD84hcZPEd1eka635aV"
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - DELETE
    uri: "api/v1/usermeta/{id}"
    metadata:
      groupName: "User meta data"
      groupDescription: |-

        APIs for User meta data
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: true
      custom: []
    headers:
      Authorization: "Bearer {YOUR_AUTH_KEY}"
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the usermeta."
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - "Bearer e1V6a6gc4vfPbDdZ58ah3Ek"
    controller: null
    method: null
    route: null
    custom: []
