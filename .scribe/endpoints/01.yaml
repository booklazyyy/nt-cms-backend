name: Posts
description: |-

  APIs for Posts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for Posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all posts'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "John Doe"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h4fvbkdE6561egc83PZaVaD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for Posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new Post'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: ''
        required: false
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'This field is required when <code>type</code> is <code>!attachment</code>.'
        required: false
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      excerpt:
        name: excerpt
        description: ''
        required: false
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: 'This field is required when <code>type</code> is <code>!attachment</code>.'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data_json:
        name: data_json
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      language:
        name: language
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      guid:
        name: guid
        description: ''
        required: false
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      menu_order:
        name: menu_order
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ordered:
        name: ordered
        description: ''
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      mime_type:
        name: mime_type
        description: ''
        required: false
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      files:
        name: files
        description: 'This field is required when <code>type</code> is <code>attachment</code>.  Must be a file. Must not be greater than 10240 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: ut
      type: blanditiis
      slug: hic
      title: accusantium
      excerpt: dolores
      content: et
      data_json: autem
      language: officiis
      status: ullam
      guid: impedit
      menu_order: reprehenderit
      ordered: doloribus
      mime_type: iste
    fileParameters:
      files:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E4eabPgkdavf6D65hcZV183'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for Posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"user_id":2,"organization_id":null,"type":"page","parent_id":null,"slug":null,"title":"test data","excerpt":null,"data_json":"{\"assets\":[],\"styles\":[{\"selectors\":[\"#il82\"],\"style\":{\"display\":\"inline-block\",\"padding\":\"5px\",\"min-width\":\"50px\",\"min-height\":\"50px\"}}],\"pages\":[{\"frames\":[{\"component\":{\"type\":\"wrapper\",\"stylable\":[\"background\",\"background-color\",\"background-image\",\"background-repeat\",\"background-attachment\",\"background-position\",\"background-size\"],\"components\":[{\"type\":\"link\",\"droppable\":true,\"editable\":false,\"attributes\":{\"id\":\"il82\"}},{\"tagName\":\"blockquote\",\"type\":\"text\",\"classes\":[\"quote\"],\"components\":[{\"type\":\"textnode\",\"content\":\"\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\\n      \"}]},{\"tagName\":\"blockquote\",\"type\":\"text\",\"classes\":[\"quote\"],\"components\":[{\"type\":\"textnode\",\"content\":\"\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\\n      \"}]}],\"head\":{\"type\":\"head\"},\"docEl\":{\"tagName\":\"html\"}},\"id\":\"8LIe552R5lZcErpn\"}],\"id\":\"8XyEee03XvFVtrLg\",\"type\":\"main\"}],\"symbols\":[],\"dataSources\":[]}","content":"<body><a id=\"il82\"><\/a><blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      <\/blockquote><blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      <\/blockquote><\/body>","custom_css":"* { box-sizing: border-box; } body {margin: 0;}#il82{display:inline-block;padding:5px;min-width:50px;min-height:50px;}","custom_js":null,"language":"th","status":"draft","password":null,"guid":"\/test-data","menu_order":0,"ordered":0,"mime_type":null,"published_at":null,"published_by":null,"created_at":"2024-11-05T04:56:32.000000Z","created_by":null,"updated_at":"2024-11-14T05:42:01.000000Z","updated_by":null,"deleted_at":null,"deleted_by":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DPda4Eb56Va8ecZ36kvg1fh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for Posts
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ZD381PVbavEgahdfe6ck46'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for Posts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ka6a56vD8PE3ZfVegbhc14d'
    controller: null
    method: null
    route: null
    custom: []
